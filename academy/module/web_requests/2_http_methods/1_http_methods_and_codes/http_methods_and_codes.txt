*** HTTP Methods and Codes
HTTP-методы и коды 
	
	- HTTP поддерживает несколько методов доступа к ресурсу. В протоколе HTTP 
	несколько методов запроса позволяют браузеру отправлять информацию, формы 
	или файлы на сервер. Эти методы используются, среди прочего, для того, 
	чтобы сообщить серверу, как обрабатывать отправляемый нами запрос и как на 
	него отвечать.

	Мы видели разные методы HTTP, используемые в HTTP-запросах, которые мы 
	тестировали в предыдущих разделах. С cURL, если мы используем -v для 
	предварительного просмотра полного запроса первая строка содержит метод HTTP 
	(например, GET / HTTP/1.1), в то время как с инструментами разработки браузера 
	метод HTTP показан в Method столбец. Кроме того, заголовки ответа также 
	содержат код ответа HTTP, в котором указывается статус обработки нашего 
	HTTP-запроса.  
	
	### Request Methods
	Методы запроса
		
		- Ниже приведены некоторые из часто используемых методов:
			
			GET
				
				Запрашивает определенный ресурс. Дополнительные данные могут 
				быть переданы на сервер через строки запроса в URL-адресе 
				(например, ?param=value). 

			POST
				
				Отправляет данные на сервер. Он может обрабатывать несколько 
				типов ввода, таких как текст, PDF-файлы и другие формы двоичных 
				данных. Эти данные добавляются в тело запроса после заголовков. 
				Метод POST обычно используется при отправке информации 
				(например, форм/логинов) или загрузке данных на веб-сайт, таких 
				как изображения или документы.
				

			HEAD
				
				Запрашивает заголовки, которые будут возвращены, если на сервер 
				будет отправлен запрос GET. Он не возвращает тело запроса и 
				обычно проверяет длину ответа перед загрузкой ресурсов.
				

			PUT
				
				Создает новые ресурсы на сервере. Разрешение этого метода 
				без надлежащего контроля может привести к загрузке вредоносных 
				ресурсов.

				

			DELETE
				
				Удаляет существующий ресурс на веб-сервере. Если не обеспечить 
				надлежащую защиту, это может привести к отказу в обслуживании 
				(DoS) из-за удаления важных файлов на веб-сервере.
				

			OPTIONS
				
				Возвращает информацию о сервере, например о принимаемых им 
				методах. 
				

			PATCH
				
				Применяет частичные изменения к ресурсу в указанном месте.
				
		- В списке представлены только некоторые из наиболее часто используемых 
		методов HTTP. Доступность того или иного метода зависит от сервера, а 
		также от конфигурации приложения. Полный список HTTP-методов можно найти 
		по этой ссылке 
			
			https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods
		
		...(ПРИМЕЧАНИЕ) Большинство современных веб-приложений в основном 
		полагаются на GETа также POSTметоды. Однако любое веб-приложение, 
		использующее REST API, также зависит от PUTа также DELETE, которые 
		используются для обновления и удаления данных в конечной точке API 
		соответственно. Дополнительные сведения см Введение в веб-приложения 
		модуле
			
			[!!!+++!!!] https://academy.hackthebox.com/module/details/75

	### Response Codes
	Коды ответов
		
		- Коды состояния HTTP используются для информирования клиента о состоянии 
		его запроса. HTTP-сервер может возвращать пять типов кодов ответа:
			
			1xx	# Предоставляет информацию и не влияет на обработку запроса
			
			2xx # Возвращается при успешном выполнении запроса 
			
			3xx # Возвращается, когда сервер перенаправляет клиента
			
			4xx # Означает неправильные запросы from the client. Например,
				запрос ресурса, который не существует, или запрос неправильного
				формата

			5xx	# Возврат, когда есть какая-то проблема with the HTTP server сам

		- Ниже приведены некоторые из часто встречающихся примеров каждого из 
		вышеуказанных типов методов HTTP:
			
			200 OK
				
				Возвращается при успешном запросе, а тело ответа обычно содержит 
				запрошенный ресурс. 
			
			302 Found
				
				Перенаправляет клиента на другой URL. Например, перенаправление 
				пользователя на свою панель инструментов после успешного входа 
				в систему. 

			400 Bad Request

				Возвращается при обнаружении неправильно сформированных запросов, 
				таких как запросы с отсутствующими разделителями строк. 

			403 Forbidden
				
				Означает, что у клиента нет соответствующего доступа к ресурсу. 
				Он также может быть возвращен, когда сервер обнаруживает 
				вредоносный ввод пользователя.

			404 Not Found 
				
				Возвращается, когда клиент запрашивает ресурс, которого нет на 
				сервере.

			500 Internal Server Error 

				Возвращается, когда сервер не может обработать запрос.

		- Полный список стандартных кодов ответов HTTP можно найти по этой ссылке.
			
			https://developer.mozilla.org/en-US/docs/Web/HTTP/Status

		- Помимо стандартных кодов HTTP, различные серверы и провайдеры, такие как 
		Cloudflare или AWS реализуют свои собственные коды. 
			
			https://support.cloudflare.com/hc/en-us/articles/115003014432-HTTP-Status-Codes
			
			https://docs.aws.amazon.com/AmazonSimpleDB/latest/DeveloperGuide/APIError.html



