*** HTML
	
	Первым и наиболее доминирующим компонентом внешнего интерфейса
	веб-приложений является HTML (язык гипертекстовой разметки) . HTML лежит в
	основе любой веб-страницы, которую мы видим в Интернете. Он содержит
	основные элементы каждой страницы, включая заголовки, формы, изображения и
	многие другие элементы. Веб-браузер, в свою очередь, интерпретирует эти
	элементы и отображает их конечному пользователю.
		
		https://en.wikipedia.org/wiki/HTML

	Ниже приведен очень простой пример HTML-страницы: 
				
		

	### EXAMPLE
	Пример
		
		<!DOCTYPE html>
		<html>
			<head>
				<title>Page Title</title>
			</head>
			<body>
				<h1>A Heading</h1>
				<p>A Paragraph</p>
			</body>
		</html>
		
		Это отобразит следующее: 
		
			~~~___ LINK ___~~~ img/wweb_apps_html_2.jpg
	
			Как мы видим, HTML-элементы отображаются в виде дерева, похожего на 
			XMLи другие языки: 
		
	### HTML-Structure
	HTML-структура
		
		document
		 - html
		   -- head
			  --- title
		   -- body
			  --- h1
			  --- p

		Каждый элемент может содержать другие элементы HTML, а основной HTMLтег
		должен содержать все остальные элементы на странице, которые подпадают
		под document, различая HTMLи документы, написанные для других языков,
		такие как XMLдокументы.

		HTML-элементы приведенного выше кода можно просмотреть следующим
		образом: 
			
			<html>
			    <head>
					<title>Page Title</title>
			    </head>
			    <body>
					<h1>A Heading</h1>
					<p>A Paragraph</p>
			    </body>
			</html>
			
		Каждый элемент HTML открывается и закрывается с помощью тега,
		указывающего тип элемента, например <p>для абзацев», где содержимое
		будет помещено между этими тегами. Теги также могут содержать
		идентификатор или класс элемента, например <p id='para1'>или же <p
		id='red-paragraphs'>', который необходим CSS для правильного
		форматирования элемента. И теги, и содержимое составляют весь элемент.
			


	### URL-Encoding
	URL-кодирование
		
		Важной концепцией, которую следует изучить в HTML, является кодирование 
		URL :
			
			https://en.wikipedia.org/wiki/Percent-encoding

		Или процентное кодирование. Чтобы браузер правильно отображал содержимое
		страницы, он должен знать используемую кодировку. Например, в
		URL-адресах браузеры могут использовать только кодировку ASCII :
			
			https://en.wikipedia.org/wiki/ASCII

		
		Которая допускает только буквенно-цифровые символы и некоторые
		специальные символы. Следовательно, все остальные символы за пределами
		набора символов ASCII должны быть закодированы в URL-адресе. Кодировка
		URL заменяет небезопасные символы ASCII на %символ, за которым следуют
		две шестнадцатеричные цифры.
		
		Например, одинарная кавычка ' ''кодируется как ' %27', который может
		быть воспринят браузерами как одинарная кавычка. URL-адреса не могут
		содержать пробелов и заменяют пробел либо +(знак плюс) или %20.
		Некоторые распространенные кодировки символов:
			
			space 	%20
			! 		%21
			" 		%22
			# 		%23
			$ 		%24
			% 		%25
			& 		%26
			' 		%27
			( 		%28
			)		%29

			Полную таблицу кодировки символов можно увидеть здесь .
				
				https://www.w3schools.com/tags/ref_urlencode.ASP

		Многие онлайн-инструменты можно использовать для
		кодирования/декодирования URL-адресов. Кроме того, популярный веб-прокси
		Burp Suite имеет декодер/кодировщик, который можно использовать для
		преобразования между различными типами кодировок.
			
			https://portswigger.net/burp

		Попробуйте закодировать/декодировать некоторые символы и строки с
		помощью этого онлайн-инструмента .
			
			https://www.url-encode-decode.com/



	### Usage
	Применение
		
		The <head>элемент обычно содержит элементы, которые не печатаются
		непосредственно на странице, например заголовок страницы, в то время как
		все основные элементы страницы расположены под <body>. Другие важные
		элементы включают в себя <style>, который содержит CSS-код страницы, и
		<script>, который содержит JS-код страницы, как мы увидим в следующем
		разделе.
			
		Каждый из этих элементов называется DOM (объектная модель документа)
			
			https://en.wikipedia.org/wiki/Document_Object_Model

		 Консорциум World Wide Web (W3C) определяет DOMв качестве:
		 	
			https://www.w3.org/

		"The W3C Document Object Model (DOM) is a platform and language-neutral
		interface that allows programs and scripts to dynamically access and
		update the content, structure, and style of a document."

		Стандарт DOM разделен на 3 части:

			Core DOM-	стандартная модель для всех типов документов 
			XML DOM-	стандартная модель для документов XML 
			HTML DOM-	стандартная модель для документов HTML

		Например, из приведенного выше древовидного представления мы можем
		ссылаться на DOM как document.headили же document.h1, и так далее.

		Понимание структуры HTML DOM может помочь нам понять, где находится
		каждый элемент, который мы просматриваем на странице, что позволяет нам
		просматривать исходный код определенного элемента на странице и искать
		потенциальные проблемы. Мы можем найти элементы HTML по их
		идентификатору, имени их тега или имени их класса.

		Это также полезно, когда мы хотим использовать внешние уязвимости
		(например, XSS) для управления существующими элементами или создания
		новых элементов для удовлетворения наших потребностей.
