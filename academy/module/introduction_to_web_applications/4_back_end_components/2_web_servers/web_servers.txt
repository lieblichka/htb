*** Web Servers

	Веб -сервер — это приложение, работающее на внутреннем сервере, которое
	обрабатывает весь HTTP-трафик от браузера на стороне клиента, направляет его
	на запрошенные страницы и, наконец, отвечает браузеру на стороне клиента. 
		
		https://en.wikipedia.org/wiki/Web_server

	Веб-серверы обычно работают на TCP- портах. 
		
		https://en.wikipedia.org/wiki/Port_(computer_networking)

	80или же 443, и отвечают за подключение конечных пользователей к различным
	частям веб-приложения, а также за обработку их различных ответов. 

	### Workflow
	Рабочий процесс
		
		Типичный веб-сервер принимает HTTP-запросы со стороны клиента и отвечает
		различными HTTP-ответами и кодами, такими как код 200 OKответ на
		успешный запрос, код 404 NOT FOUNDпри запросе страниц, которых не
		существует, код 403 FORBIDDENдля запроса доступа к страницам с
		ограниченным доступом и так далее.
			
			~~~___ LINK ___~~~ img/web-server-requests.jpg

		Ниже приведены некоторые из наиболее распространенных кодов ответов HTTP
			
			https://developer.mozilla.org/en-US/docs/Web/HTTP/Status

			Успешные ответы 	

				200 OK 	Запрос выполнен


			Сообщения о перенаправлении


				301 Moved Permanently 	URL запрошенного ресурса был изменен
										навсегда
				
				302 Found 				URL запрошенного ресурса был временно
										изменен


			Ответы клиента на ошибку 	
		

				400 Bad Request 		Сервер не смог понять запрос из-за
										неправильного синтаксиса
				
				401 Unauthorized 		Неавторизованная попытка доступа к
										странице
				
				403 Forbidden 			У клиента нет прав доступа к контенту
				
				404 Not Found 			Сервер не может найти запрошенный ресурс
				
				405 Method Not Allowed 	Метод запроса известен серверу, но он
										отключен и не может быть использован.
				
				408 Request Timeout 	Этот ответ отправляется некоторыми
										серверами при незанятом соединении, даже
										без какого-либо предварительного запроса
										со стороны клиента.
			
			Ответы сервера на ошибку 	
		

				500 Internal Server Error 	Сервер столкнулся с ситуацией,
											которую он не знает, как с ней
											справиться
				
				502 Bad Gateway 			Сервер, работая в качестве шлюза для
											получения ответа, необходимого для
											обработки запроса, получил
											недопустимый ответ.
				
				504 Gateway Timeout 		Сервер действует как шлюз и не может
											вовремя получить ответ 

			



			Веб-серверы также принимают различные типы пользовательского ввода в
			HTTP-запросах, включая текст, JSON 
				
				https://www.w3schools.com/js/js_json_intro.asp

			И даже двоичные данные (например, для загрузки файлов). Как только
			веб-сервер получает веб-запрос, он отвечает за его маршрутизацию к
			месту назначения, запуск любых процессов, необходимых для этого
			запроса, и возврат ответа пользователю на стороне клиента. Страницы
			и файлы, которые веб-сервер обрабатывает и направляет трафик,
			являются основными файлами веб-приложения.
				
			- Ниже показан пример запроса страницы в терминале Linux с помощью
			утилиты cURL и получения ответа сервера при использовании -Iфлаг,
			который отображает заголовки:
				
				https://en.wikipedia.org/wiki/CURL

				
				mwuckert@htb[/htb]$ curl -I https://academy.hackthebox.com

					HTTP/2 200
					date: Tue, 15 Dec 2020 19:54:29 GMT
					content-type: text/html; charset=UTF-8
					...SNIP...

			

			Пока это cURLПример команды показывает нам исходный код
			веб-страницы: 

				mwuckert@htb[/htb]$ curl https://academy.hackthebox.com

					<!doctype html>
					<html lang="en">
					<head>
					<meta charset="utf-8" />
					<title>Cyber Security Training : HTB Academy</title>
					<meta name="viewport" content="width=device-width, initial-scale=1.0">

				

			Многие типы веб-серверов могут использоваться для запуска
			веб-приложений. Большинство из них могут обрабатывать все типы
			сложных HTTP-запросов, и обычно они бесплатны. Мы даже можем
			разработать собственный базовый веб-сервер, используя такие языки,
			как Python, JavaScript, а также PHP. Однако для каждого языка
			существует популярное веб-приложение, оптимизированное для обработки
			больших объемов веб-трафика, что экономит нам время при создании
			собственного веб-сервера. 


	### Apache
	Апачи
		
		~~~___ LINK ___~~~ img/apache.png
			
		Apache 'или httpd' является самым распространенным веб-сервером в
		Интернете, на котором размещено более 40%всех интернет-сайтов.
		Apacheобычно предустановлен в большинстве Linuxдистрибутивов, а также
		может быть установлен на серверах Windows и macOS.
			
			https://www.apache.org/

		Apacheобычно используется с PHPдля разработки веб-приложений, но он
		также поддерживает другие языки, такие как .Net, Python, Perlи даже
		языки ОС, такие как Bashчерез CGI. Пользователи могут установить
		различные Apacheмодули для расширения его функциональности и поддержки
		большего количества языков. Например, для поддержки обслуживания
		PHPфайлы, пользователи должны установить PHPна внутреннем сервере, в
		дополнение к установке mod_phpмодуль для Apache.

		Apacheявляется проектом с открытым исходным кодом, и пользователи
		сообщества могут получить доступ к его исходному коду для устранения
		проблем и поиска уязвимостей. Он хорошо поддерживается и регулярно
		исправляет уязвимости, чтобы защитить его от эксплуатации. Кроме того,
		он очень хорошо документирован, что делает использование и настройку
		различных частей веб-сервера относительно простыми. Apacheобычно
		используется стартапами и небольшими компаниями, так как его легко
		разрабатывать. Тем не менее, некоторые крупные компании используют
		Apache, в том числе:


	### NGINX
	NGINX
		
		~~~___ LINK ___~~~ img/nginx.png

		NGINX — второй по распространенности веб-сервер в Интернете, на котором
		размещается примерно 30%всех интернет-сайтов. NGINXфокусируется на
		обслуживании множества одновременных веб-запросов с относительно низкой
		нагрузкой на память и ЦП, используя для этого асинхронную архитектуру.
		Это делает NGINXочень надежный веб-сервер для популярных веб-приложений
		и ведущих компаний по всему миру, поэтому он является самым популярным
		веб-сервером среди веб-сайтов с высоким трафиком: около 60% из 100 000
		лучших веб-сайтов используют NGINX.
			
			https://www.nginx.com/

		NGINX также является бесплатным и открытым исходным кодом, что дает все
		те же преимущества, которые были упомянуты ранее, такие как безопасность
		и надежность. Некоторые популярные веб-сайты, использующие
		NGINX включать:
			
			Google 	Facebook 	Twitter 	Cisco 	Intel 	Netflix 	HackTheBox


	### IIS
	IIS
		
		~~~___ LINK ___~~~ img/iis.png
			
		IIS (Internet Information Services) — третий по распространенности
		веб-сервер в Интернете, на котором размещается около 15%всех
		интернет-сайтов. IISразрабатывается и поддерживается Microsoft и в
		основном работает на серверах Microsoft Windows. IISобычно используется
		для размещения веб-приложений, разработанных для платформы Microsoft
		.NET, но также может использоваться для размещения веб-приложений,
		разработанных на других языках, таких как PHPили размещать другие виды
		услуг, например FTP. Более того, IISочень хорошо оптимизирован для
		интеграции с Active Directory и включает в себя такие функции, как
		Windows Authдля аутентификации пользователей с помощью Active Directory,
		что позволяет им автоматически входить в веб-приложения.
			
			https://en.wikipedia.org/wiki/Internet_Information_Services			
			
		Хотя это и не самый популярный веб-сервер, многие крупные организации
		используют IISкак их веб-сервер. Многие из них используют Windows Server
		на своей серверной части или активно используют Active Directory в своей
		организации. Некоторые популярные веб-сайты, использующие IIS, включают:
			
			Microsoft 	Office365 	Skype 	Stack Overflow 	Dell

		Помимо этих трех веб-серверов, существует множество других часто
		используемых веб-серверов, таких как Apache Tomcat 
			
			https://tomcat.apache.org/

		для Javaвеб-приложения и Node.JS для веб-приложений, разработанных с
		использованием JavaScriptна заднем конце.
			
			https://nodejs.org/en/


