*** Vulnerability Assessment
Оценка уязвимости 
	
	- В течение vulnerability assessmentэтап, мы изучаем и анализируем информацию,
	собранную на этапе сбора информации. Этап оценки уязвимости представляет
	собой аналитический процесс, основанный на результатах. 
		
		~~~___ LINK ___~~~ 0-PT-Process-VA.png
		
	- Любой анализ может быть очень сложным, так как значительную роль играет
	множество различных факторов и их взаимозависимостей. Помимо того, что мы
	работаем с тремя разными временами (прошлое, настоящее и будущее) во время
	каждого анализа, важную роль играют начало и место назначения. Существует
	четыре различных типа анализа:
		
		Тип анализа 	Описание
		
		[Descriptive]
		
		Описательный анализ необходим в любом анализе данных. С
		одной стороны, он описывает набор данных на основе индивидуальных
		характеристик. Это помогает обнаружить возможные ошибки при сборе данных
		или выбросы в наборе данных.
		
		[Diagnostic]

		Диагностический анализ проясняет причины, последствия и
		взаимодействие состояний. Это обеспечивает понимание, полученное
		посредством корреляций и интерпретации. Мы должны смотреть назад,
		подобно дескриптивному анализу, с той тонкой разницей, что мы пытаемся
		найти причины событий и развития.
		
		[Predictive]

		Оценивая исторические и текущие данные, прогностический
		анализ создает прогностическую модель будущих вероятностей. Основываясь
		на результатах описательного и диагностического анализов, этот метод
		анализа данных позволяет выявлять тенденции, выявлять отклонения от
		ожидаемых значений на ранней стадии и максимально точно прогнозировать
		будущие явления.
		
		[Prescriptive]

		Предписывающая аналитика направлена на то,
		чтобы сузить круг действий, которые необходимо предпринять, чтобы
		устранить или предотвратить будущую проблему или инициировать
		определенное действие или процесс.

	

		Мы используем наши результаты и информацию, полученную на данный момент,
		и анализируем их, чтобы сделать выводы. Формирование выводов может быть
		продолжено очень далеко, но тогда мы должны подтвердить или опровергнуть
		их. Предположим, мы обнаружили на хосте открытый TCP-порт 2121 на этапе
		сбора информации.

		Кроме того, что этот порт открыт, Nmap больше ничего нам не показал.
		Теперь мы должны спросить себя, какие выводы можно сделать из этого
		результата. Поэтому не имеет значения, с какого вопроса мы начнем, чтобы
		сделать выводы. Тем не менее, необходимо спросить precise questionsи
		помним, что мы knowа также do not know. В этот момент мы должны сначала
		спросить себя, что мы seeи что мы на самом деле have, потому что то, что
		мы видим, не совпадает с тем, что мы имеем: 



			# а TCPпорт 2121. - TCPуже означает, что эта услуга
			connection-oriented.

			# Это standardпорт? - No, потому что они между 0-1023, он же известные
			или системные порты
				
				https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml

			# Есть ли в этом числа port numberэтот взгляд familiar? - Yes, TCPпорт
			21( FTP). Из нашего опыта мы познакомимся со многими стандартными
			портами и их службами, которые администраторы часто пытаются
			замаскировать, но часто используют «легкие для запоминания»
			альтернативы.

		Основываясь на нашем предположении, мы можем попытаться подключиться к
		сервису, используя Netcatили FTPclient и попытайтесь установить
		соединение, чтобы подтвердить или опровергнуть нашу догадку.

		При подключении к сервису мы заметили, что подключение занимает больше
		времени, чем обычно (около 15 секунд). Есть некоторые сервисы, скорость
		соединения или время отклика которых можно настроить. Теперь, когда мы
		знаем, что на этом порту работает FTP-сервер, мы можем сделать вывод о
		происхождении нашего «неудачного» сканирования. Мы могли бы подтвердить
		это еще раз, указав минимум probe round trip time( --min-rtt-timeout) в
		Nmap на 15 или 20 секунд и повторный запуск сканирования. 

		### Vulnerability Research and Analysis
		Исследование и анализ уязвимостей 

			- Information Gatheringа также Vulnerability Researchможно
			рассматривать как часть описательного анализа. Здесь мы
			идентифицируем отдельные сетевые или системные компоненты, которые
			исследуем. В Vulnerability Research, мы ищем известные уязвимости,
			эксплойты и дыры в безопасности, которые уже были обнаружены и о
			которых сообщалось. Поэтому, если мы определили версию службы или
			приложения посредством сбора информации и обнаружили общие
			уязвимости и риски (CVE) , весьма вероятно, что эта уязвимость все
			еще присутствует. 
				
				https://www.cve.org/ResourcesSupport/FAQs
			
			Мы можем найти информацию об уязвимостях для каждого компонента,
			используя множество разных источников. К ним относятся, но не
			ограничиваются: 
			
				CVEдетали 	
					
					https://www.cvedetails.com/

				Эксплойт БД 	
					
					https://www.exploit-db.com/

				БезопасностьFocus
					
					https://www.securityfocus.com/vulnerabilities

				Защита от пакетного шторма 	
					
					https://packetstormsecurity.com/

				НИСТ 	
					
					https://nvd.nist.gov/vuln/search?execution=e2s1

				Уязвимости 
					
					https://vulners.com/

			Это где Diagnostic Analysisа также Predictive Analysisиспользуется.
			После того, как мы обнаружили опубликованную уязвимость, подобную этой,
			мы можем диагностировать ее, чтобы определить, что вызывает или вызвало
			уязвимость. Здесь мы должны понимать функциональность Proof-Of-Concept(
			POC) кода или самого приложения или службы как можно лучше, так как
			многие ручные настройки администраторами потребуют некоторой настройки
			для POC. Каждый POC адаптирован к конкретному случаю, который нам также
			необходимо будет адаптировать к нашему в большинстве случаев.

		

	### Assessment of Possible Attack Vectors
	Оценка возможных векторов атак
		
		- Vulnerability Assessmentтакже включает фактическое тестирование, которое
		является частью Predictive Analysis. При этом мы анализируем
		историческую информацию и объединяем ее с текущей информацией, которую
		нам удалось узнать. Независимо от того, получили ли мы конкретные
		требования к уровню уклонения от нашего клиента, мы тестируем найденные
		услуги и приложения. locallyили же on the target system. Если нам нужно
		проводить скрытое тестирование и избегать предупреждений, мы должны
		максимально точно отразить целевую систему локально. Это означает, что
		мы используем информацию, полученную на этапе сбора информации, для
		репликации целевой системы, а затем ищем уязвимости в локально
		развернутой системе. 

	### The Return
	Возврат
		
		- Предположим, мы не можем обнаружить или идентифицировать потенциальные
		уязвимости в результате нашего анализа. В таком случае мы вернемся к
		Information Gatheringstage и ищите более подробную информацию, чем мы
		собрали до сих пор. Важно отметить, что эти две стадии ( Information
		Gatheringа также Vulnerability Assessment) часто перекрываются, что
		приводит к регулярному перемещению между ними. Мы увидим это во многих
		видеороликах, где автор решает HTB-бокс или какую-то задачу CTF. Следует
		помнить, что эти задачи часто решаются максимально быстро, поэтому
		скорость важнее качества. В CTF цель состоит в том, чтобы попасть на
		целевую машину и capture the flagsс самыми высокими привилегиями как
		можно быстрее, вместо того, чтобы выявлять все потенциальные слабости в
		системе.

