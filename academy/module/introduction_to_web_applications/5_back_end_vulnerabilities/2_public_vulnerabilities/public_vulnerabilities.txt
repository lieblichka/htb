*** Public Vulnerabilities
Общедоступные уязвимости 
	
	- Наиболее критическими уязвимостями внутренних компонентов являются те,
	которые могут быть атакованы извне и могут быть использованы для получения
	контроля над внутренним сервером без необходимости локального доступа к
	этому серверу (т. е. внешнего тестирования на проникновение). Эти уязвимости
	обычно вызваны ошибками кодирования, допущенными при разработке серверных
	компонентов веб-приложения. Таким образом, в этой области существует большое
	разнообразие типов уязвимостей, начиная от простых уязвимостей, которые
	можно относительно легко использовать, и заканчивая сложными уязвимостями,
	требующими глубокого знания всего веб-приложения.


	### Public CVE
	Общедоступный CVE 
		
		Поскольку многие организации развертывают общедоступные веб-приложения,
		такие как веб-приложения с открытым исходным кодом и проприетарные
		веб-приложения, эти веб-приложения, как правило, тестируются многими
		организациями и экспертами по всему миру. Это приводит к частому
		обнаружению большого количества уязвимостей, большинство из которых
		исправляются, а затем выкладываются в общий доступ, и им присваивается
		запись CVE ( Common Vulnerabilities and Exposures ) и оценка.
			
			https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures

		Многие тестеры на проникновение также делают доказательства
		концептуальных эксплойтов, чтобы проверить, можно ли использовать
		определенную общедоступную уязвимость, и обычно делают эти эксплойты
		общедоступными, для тестирования и в образовательных целях. Это делает
		поиск общедоступных эксплойтов самым первым шагом, который мы должны
		пройти для веб-приложений.

			
			(...) Совет: Первый шаг — определить версию веб-приложения. Его
			можно найти во многих местах, например, в исходном коде
			веб-приложения. Для веб-приложений с открытым исходным кодом мы
			можем проверить репозиторий веб-приложения и определить, где
			отображается номер версии (например, на странице (version.php)), а
			затем проверить ту же страницу в нашем целевом веб-приложении для
			подтверждения.  

		Определив версию веб-приложения, мы можем поискать в Google
		общедоступные эксплойты для этой версии веб-приложения. Мы также можем
		использовать онлайн-базы данных эксплойтов, такие как: 
			
			Exploit DB
				
				https://www.exploit-db.com/

			Rapid7 DB 
				
				https://www.rapid7.com/db/

			Vulnerability Lab
				
				https://www.rapid7.com/db/


		В следующем примере показан поиск общедоступных эксплойтов WordPress в 
		БД Rapid7:
			
			https://www.rapid7.com/db/
				
			~~~___ LINK ___~~~ img/rapid7-db.jpg

		Обычно нас интересуют эксплойты с оценкой CVE 8-10 или эксплойты,
		которые приводят к Remote Code Execution. Следует также рассмотреть
		другие типы общедоступных эксплойтов, если ни один из вышеперечисленных
		недоступен.

		Кроме того, эти уязвимости характерны не только для веб-приложений, но и
		для компонентов, используемых веб-приложением. Если веб-приложение
		использует внешние компоненты (например, плагин), мы также должны искать
		уязвимости для этих внешних компонентов.


	### Common Vulnerability Scoring System (CVSS)
	Общая система оценки уязвимостей (CVSS)
		
		Общая система оценки уязвимостей (CVSS) — это отраслевой стандарт с
		открытым исходным кодом для оценки серьезности уязвимостей безопасности.
		Эта система оценки часто используется в качестве стандартного измерения
		для организаций и правительств, которым необходимо производить точные и
		последовательные оценки серьезности уязвимостей своих систем. Это
		помогает с расстановкой приоритетов ресурсов и реагированием на данную
		угрозу
			
			https://en.wikipedia.org/wiki/Common_Vulnerability_Scoring_System

		Оценки CVSS основаны на формуле, в которой используется несколько
		показателей: Base, Temporal, а также Environmental. При расчете
		серьезности уязвимости с помощью CVSS Baseметрики дают оценку от 0 до
		10, которая изменяется путем применения Temporalа также
		Environmentalметрики. Национальная база данных уязвимостей (NVD)
		предоставляет оценки CVSS почти для всех известных, опубликованных
		уязвимостей. 
			
			# NVD 

			https://nvd.nist.gov/

		В настоящее время NVD предоставляет только Baseоценки, основанные на
		неотъемлемых характеристиках данной уязвимости. Текущие системы оценки —
		CVSS v2 и CVSS v3. Между системами v2 и v3 есть несколько отличий, а
		именно изменения в Baseа также Environmentalгруппы для учета
		дополнительных показателей. Подробнее о различиях между двумя системами
		подсчета очков можно узнать здесь.
			
			https://www.balbix.com/insights/cvss-v2-vs-cvss-v3

		Рейтинги CVSS немного различаются между V2 и V3, как видно из следующих
		таблиц:

			Рейтинги CVSS V2.0 	

				Строгость 		Базовый диапазон баллов
				|				|
				-Низкий 		0,0-3,9
				-Середина 		4,0-6,9
				-Высокая 		7,0-10,0

			Рейтинги CVSS V3.0 	

				Строгость 		Базовый диапазон баллов
				|				|
				-Никто 			0,0
				-Низкий 		0,1-3,9
				-Середина 		4,0-6,9
				-Высокая 		7,0-8,9
				-Критический 	9,0-10,0 

		НВД не учитывается Temporalа также Environmentalметрики, потому что
		первые могут меняться со временем из-за внешних событий. Последний
		представляет собой настраиваемую метрику, основанную на потенциальном
		влиянии уязвимости на данную организацию. NVD предоставляет калькулятор
		
			CVSS v2
				
				https://nvd.nist.gov/vuln-metrics/cvss/v2-calculator

			CVSS v3
				
				https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator
				


		Которые организации могут использовать для учета дополнительных рисков
		от Temporalа также Environmentalуникальные для них данные. Калькуляторы
		очень интерактивны, и их можно использовать для точной настройки оценки
		CVSS в соответствии с нашей средой. Мы можем перемещаться по каждой
		метрике, чтобы узнать о ней больше и точно определить, как она применима
		к нашей организации. Ниже приведен пример представления калькулятора
		CVSS v3: 
			
			~~~___ LINK ___~~~ img/cvssv3_calc.png

		Поэкспериментируйте с калькулятором CVSS и посмотрите, как можно
		настроить различные показатели, чтобы получить заданный балл.
		Просмотрите некоторые CVE и попытайтесь получить одинаковую оценку CVSS.
		Как изменится оценка CVSS при подаче заявления Temporalа также
		Environmentalпоказатели? Это удобное руководство чрезвычайно полезно для
		понимания V2 и V3 и того, как использовать калькуляторы для получения
		заданного балла.
			
			https://www.first.org/cvss/user-guide

	### Back-end Server Vulnerabilities
	Уязвимости внутреннего сервера
		
		Как и общедоступные уязвимости для веб-приложений, мы также должны
		рассмотреть возможность поиска уязвимостей для других внутренних
		компонентов, таких как внутренний сервер или веб-сервер.

		Наиболее критические уязвимости для серверных компонентов находятся в
		веб-серверах, поскольку они общедоступны через TCPпротокол. Примером
		известной уязвимости веб-сервера является Shell-Shock, который затронул
		веб-серверы Apache, выпущенные до 2014 года и использовавшие HTTPзапросы
		на получение удаленного управления внутренним сервером.

		Что касается уязвимостей во внутреннем сервере или базе данных, они
		обычно используются после получения локального доступа к внутреннему
		серверу или внутренней сети, который может быть получен броском.
		externalуязвимостей или во время внутреннего тестирования на
		проникновение. Обычно они используются для получения привилегированного
		доступа к внутреннему серверу или внутренней сети или для получения
		контроля над другими серверами в той же сети.

		Хотя эти уязвимости нельзя использовать напрямую извне, они по-прежнему
		являются критическими и требуют исправления, чтобы защитить все
		веб-приложение от компрометации.


QUESTIONS
	
	Какова оценка общедоступной уязвимости CVE-2017-0144 по шкале CVSS?
		
		https://nvd.nist.gov/vuln/detail/CVE-2017-0144

		9.3  ++++++++++++++
