*** Basic Tools
Основные инструменты

	Такие инструменты, как SSH, Netcat, Tmux, а также Vimнеобходимы и ежедневно
	используются большинством специалистов по информационной безопасности. Хотя
	эти инструменты не предназначены для тестирования на проникновение, они
	имеют решающее значение для процесса тестирования на проникновение, поэтому
	мы должны освоить их. 

	### Using SSH
	Использование SSH 

		Secure Shell (SSH) — это сетевой протокол, работающий на порту 22по
		умолчанию и предоставляет пользователям, таким как системные
		администраторы, безопасный способ удаленного доступа к компьютеру. 
			
			https://en.wikipedia.org/wiki/SSH_(Secure_Shell)

		SSH можно настроить с аутентификацией по паролю или без пароля,
		используя аутентификацию с открытым ключом, используя пару SSH
		открытый/закрытый ключ. SSH можно использовать для удаленного доступа к
		системам в той же сети через Интернет, облегчения подключения к ресурсам
		в других сетях с использованием переадресации портов/прокси, а также для
		загрузки/выгрузки файлов в удаленные системы и из них.
			
			https://serverpilot.io/docs/how-to-use-ssh-public-key-authentication/

		SSH использует модель клиент-сервер, подключая пользователя, работающего
		с клиентским приложением SSH, таким как OpenSSHна SSH-сервер. При атаке
		на коробку или во время реальной оценки мы часто получаем учетные данные
		в открытом виде или закрытый ключ SSH, которые можно использовать для
		прямого подключения к системе через SSH. Соединение SSH обычно намного
		более стабильно, чем соединение с обратной оболочкой, и часто может
		использоваться в качестве «узла перехода» для перечисления и атаки на
		другие узлы в сети, передачи инструментов, настройки постоянства и т. д.
		Если мы получим набор учетных данных , мы можем использовать SSH для
		удаленного входа на сервер, используя имя пользователя @IP-адрес
		удаленного сервера, как показано ниже: 
			
			mwuckert@htb[/htb]$ ssh Bob@10.10.10.10

			Bob@remotehost's password: *********

			Bob@remotehost#

		Также можно прочитать локальные закрытые ключи в скомпрометированной
		системе или добавить наш открытый ключ, чтобы получить SSH-доступ к
		конкретному пользователю, как мы обсудим в следующем разделе. Как мы
		видим, SSH — отличный инструмент для безопасного подключения к удаленной
		машине. Он также предоставляет способ сопоставления локальных портов на
		удаленной машине с нашим локальным хостом, что иногда может оказаться
		удобным.


	### Using Netcat
	Использование Netcat
		

		_ , ncat, или же nc, отличная сетевая утилита для взаимодействия с
		портами TCP/UDP. Его можно использовать для многих вещей во время
		пентеста. Его основное использование — для подключения к оболочкам,
		которые мы обсудим позже в этом модуле. В дополнение к этому,
		netcatможет использоваться для подключения к любому прослушиваемому
		порту и взаимодействия со службой, работающей на этом порту. Например,
		SSHзапрограммирован для обработки соединений через порт 22 для отправки
		всех данных и ключей. Мы можем подключиться к TCP-порту 22 с помощью
		netcat:
			
			mwuckert@htb[/htb]$ netcat 10.10.10.10 22

			SSH-2.0-OpenSSH_8.4p1 Debian-3

		Как мы видим, порт 22 прислал нам свой баннер, в котором говорилось, что
		SSHработает на нем. Эта техника называется Banner Grabbingи может помочь
		определить, какая служба работает на конкретном порту.
		Netcatпоставляется предварительно установленным в большинстве
		дистрибутивов Linux. Мы также можем скачать копию для компьютеров с
		Windows по этой ссылке . 
			
			https://nmap.org/download.html

		Есть еще одна альтернатива Windows netcatзакодирован в PowerShell под
		названием PowerCat . Netcatтакже может использоваться для передачи
		файлов между машинами, как мы обсудим позже.
			
			https://github.com/besimorhino/powercat

		Еще одна похожая сетевая утилита — socat , 
			
			https://linux.die.net/man/1/socat

		которая имеет несколько функций, которые netcatне поддерживает,
		например, переадресацию портов и подключение к последовательным
		устройствам. Socatтакже может использоваться для обновления оболочки до
		полностью интерактивного TTY .
			
			https://blog.ropnop.com/upgrading-simple-shells-to-fully-interactive-ttys/#method-2-using-socat

		 Мы увидим несколько примеров этого в следующем разделе. Socatэто очень
		 удобная утилита, которая должна быть частью набора инструментов каждого
		 пентестера. файл Автономный двоичный Socatможет быть передан в систему
		 после получения удаленного выполнения кода, чтобы получить более
		 стабильное соединение с обратной оболочкой.
		 	
			https://github.com/andrew-d/static-binaries


	### Using Tmux
	Использование Tmux
		
		Терминальные мультиплексоры, такие как tmuxили же Screen, являются
		отличными утилитами для расширения возможностей стандартного терминала
		Linux, таких как наличие нескольких окон в одном терминале и переход
		между ними. Давайте посмотрим несколько примеров использования tmux,
		который является более распространенным из двух. Если tmuxотсутствует в
		нашей системе Linux, мы можем установить ее с помощью следующей команды:
			
			mwuckert@htb[/htb]$ sudo pacman -S tmux 

	
		Как только у нас есть tmux, мы можем запустить его, введя tmuxкак наша
		команда: 
			
			~~~___ LINK ___~~~ img/getting_started_tmux_1.jpg

		Клавиша по умолчанию для ввода tmuxпрефикс команды [CTRL + B]. Чтобы
		открыть новое окно в tmux, мы можем нажать префикс 'т.е. [CTRL + B]', а
		затем ударил C:
			
			~~~___ LINK ___~~~ img/getting_started_tmux_2.jpg
			

		Мы видим пронумерованные окна внизу. Мы можем переключиться на каждое
		окно, нажав префикс, а затем введя номер окна, например 0или же 1. Мы
		также можем разделить окно по вертикали на панели, нажав префикс, а
		затем [SHIFT + %]: ### Using Vim
			

			~~~___ LINK ___~~~ img/getting_started_tmux_3.jpg
			
		Мы также можем разделить на горизонтальные панели, нажав префикс, а
		затем [SHIFT + "]: 
			

			~~~___ LINK ___~~~ img/getting_started_tmux_4.jpg

		Мы можем переключаться между панелями, нажимая префикс, а затем leftили
		же rightстрелки для горизонтального переключения или upили же
		downстрелки для вертикального переключения. Приведенные выше команды
		охватывают некоторые основные tmuxПрименение. Это мощный инструмент,
		который можно использовать для многих целей, в том числе для ведения
		журналов, что очень важно во время любого технического задания. 

		Эта шпаргалка является очень удобным справочником. Кроме того, это
		Введение в tmux » от видео « ippsecстоит вашего времени.
			
			https://tmuxcheatsheet.com/

			https://www.youtube.com/watch?v=Lqehvpe_djs

	### Using Vim
	Использование Vim
		
		Vim — отличный текстовый редактор, который можно использовать для
		написания кода или редактирования текстовых файлов в системах Linux.
		Одно из больших преимуществ использования Vimзаключается в том, что он
		полностью зависит от клавиатуры, поэтому вам не нужно использовать мышь,
		которая (как только мы овладеем ею) значительно повысит вашу
		производительность и эффективность при написании/редактировании кода.
		Обычно мы находим Vimили же Viустановлен на скомпрометированных системах
		Linux, поэтому изучение того, как его использовать, позволяет нам
		редактировать файлы даже в удаленных системах. Vimтакже имеет много
		других функций, таких как расширения и плагины, которые могут
		значительно расширить его использование и сделать его отличным
		редактором кода. Давайте рассмотрим некоторые основы Vim. Чтобы открыть
		файл с Vim, мы можем добавить имя файла после него:
			
			 vim /etc/hosts

			 ~~~___ LINK ___~~~ img/getting_started_vim_1.jpg

			 
		Если мы хотим создать новый файл, введите новое имя файла и Vimоткроет
		новое окно с этим файлом. Как только мы открываем файл, мы находимся в
		режиме только для чтения normal mode, что позволяет нам перемещаться по
		файлу и читать его. Чтобы отредактировать файл, мы нажимаем iвойти
		insert mode, показанный " -- INSERT --" на дне Vim. После этого мы можем
		переместить текстовый курсор и отредактировать файл:
		
			 ~~~___ LINK ___~~~ img/getting_started_vim_2.jpg

		Как только мы закончим редактирование файла, мы можем нажать клавишу
		выхода. escвыбраться из insert mode, обратно в normal mode. Когда мы в
		normal mode, мы можем использовать следующие клавиши для выполнения
		некоторых полезных сочетаний клавиш:
			
			x 	Вырезать персонажа
			dw 	Вырезать слово
			dd 	Вырезать полную строку
			yw 	Копировать слово
			yy 	Скопировать полную строку
			p 	Вставить

			Совет: мы можем умножить любую команду на многократное выполнение,
			добавив перед ней число. Например, «4yw» скопирует 4 слова вместо
			одного и так далее.

		Если мы хотим сохранить файл или выйти Vim, мы должны нажать :перейти в
		command mode. Как только мы это сделаем, мы увидим все введенные нами
		команды в нижней части окна vim: 		
			
			 ~~~___ LINK ___~~~ img/getting_started_vim_3.jpg

		Нам доступно множество команд. Вот некоторые из них:

			Команда 	Описание
			:1 		Перейти к строке №1.
			:w 		Запишите файл, сохраните
			:q 		Покидать
			:q! 	Выйти без сохранения
			:wq 	Пишите и уходите

		Vimэто очень мощный инструмент и имеет много других команд и функций.
		Эта шпаргалка является отличным ресурсом для дальнейшего раскрытия силы
		Vim.

		

			
QUESTIONS 
	
	TARGET: 165.232.100.207:32631 
		
		netcat 165.232.100.207 32631 
			
++++++			SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.1
		

