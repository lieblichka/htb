*** HyperText Transfer Protocol (HTTP)
Протокол передачи гипертекста (HTTP)
	
	- Сегодня большинство приложений, которые мы используем, постоянно 
	взаимодействуют с Интернетом, как веб-приложения, так и мобильные приложения. 
	Большинство интернет-коммуникаций осуществляется с помощью веб-запросов по 
	протоколу HTTP.
		
		# https://tools.ietf.org/html/rfc2616

	- HTTP это протокол прикладного уровня, используемый для доступа к ресурсам 
	World Wide Web. Термин hypertextобозначает текст, содержащий ссылки на 
	другие ресурсы и текст, который читатели могут легко интерпретировать.

	- Связь HTTP состоит из клиента и сервера, где клиент запрашивает у сервера 
	ресурс. Сервер обрабатывает запросы и возвращает запрошенный ресурс. Порт 
	по умолчанию для связи HTTP — порт 80, хотя его можно изменить на любой 
	другой порт, в зависимости от конфигурации веб-сервера. Одни и те же запросы 
	используются, когда мы используем Интернет для посещения различных веб-сайтов. 
	Мы вводим Fully Qualified Domain Name( FQDN) как Uniform Resource Locator( URL), 
	чтобы перейти на нужный веб-сайт, например www.hackthebox.com . 

	### URL
	ССЫЛКА
		
		- Доступ к ресурсам через HTTP осуществляется через URL, который 
		предлагает гораздо больше спецификаций, чем просто указание веб-сайта, 
		который мы хотим посетить. Давайте посмотрим на структуру URL: 
		
			$$$~ img src = url_structure.png

			# Scheme		http://https://
				
				Это используется для идентификации протокола, к которому 
				обращается клиент, и заканчивается двоеточием и двойной косой 
				чертой ( ://)

			# User Info		admin:password@

				Это необязательный компонент, содержащий учетные данные 
				(разделенные двоеточием). :) используется для аутентификации на 
				хосте и отделяется от хоста знаком at ( @) 

			# Host			inlanefreight.com
				
				Хост означает расположение ресурса. Это может быть имя хоста или 
				IP-адрес

			# Port			:80
				
				В Portотделен от Hostчерез двоеточие ( :). Если порт не указан, 
				http схемы по умолчанию для порта 80, 
				а также https порт по умолчанию 443

			# Path			/dashboard.php
				
				Это указывает на доступ к ресурсу, который может быть файлом 
				или папкой. Если путь не указан, сервер возвращает индекс по 
				умолчанию (например, index.html)

			# Query String	?login=true
				
				Строка запроса начинается со знака вопроса ( ?) и состоит из 
				параметра (например, login) и значение (например, true). 
				Несколько параметров могут быть разделены амперсандом ( &).

			# Fragments		#status
				
				Фрагменты обрабатываются браузерами на стороне клиента, чтобы 
				найти разделы в основном ресурсе (например, заголовок или раздел 
				на странице)
		- Не все компоненты необходимы для доступа к ресурсу. Основными 
		обязательными полями являются схема и хост, без которых у запроса не 
		было бы ресурса для запроса.
		 				
	### HTTP Flow
	HTTP-поток
		

		$$$~ img src = HTTP_Flow.png

		- Диаграмма выше представляет анатомию HTTP-запроса на очень высоком 
		уровне. Когда пользователь в первый раз вводит URL-адрес ( inlanefreight.com) 
		в браузер, он отправляет запрос на DNS-сервер (разрешение доменных имен) 
		для разрешения домена и получения его IP-адреса. DNS-сервер ищет IP-адрес 
		для inlanefreight.comи возвращает его. Все доменные имена должны быть 
		разрешены таким образом, поскольку сервер не может обмениваться данными 
		без IP-адреса. 

			...(ПРИМЕЧАНИЕ) Наши браузеры обычно сначала ищут записи в локальном 
			' /etc/hosts', и если запрошенный домен не существует в нем, то они 
			будут связываться с другими DNS-серверами. Мы можем использовать 
			' /etc/hosts', чтобы вручную добавить записи для разрешения DNS, 
			добавив IP-адрес, за которым следует доменное имя. 

		- Как только браузер получает IP-адрес, связанный с запрошенным доменом, 
		он отправляет запрос GET на порт HTTP по умолчанию (например, 80), 
		просит рут /дорожка. Затем веб-сервер получает запрос и обрабатывает его. 
		По умолчанию серверы настроены на возврат индексного файла при запросе 
		на /получен.

		- В этом случае содержимое index.htmlсчитываются и возвращаются 
		веб-сервером в виде HTTP-ответа. Ответ также содержит код состояния 
		(например, 200 OK), что означает, что запрос был успешно обработан. 
		Затем веб-браузер отображает index.htmlсодержимое и представляет его 
		пользователю. 

			...(ПРИМЕЧАНИЕ) Этот модуль в основном ориентирован на веб-запросы 
			HTTP. Дополнительные сведения о HTML и веб-приложениях см. в 
			Введение в веб-приложения модуле 

				https://academy.hackthebox.com/module/details/75
	
	### cURL
	requesterURL

		- В этом модуле мы будем отправлять веб-запросы через два наиболее 
		важных инструмента для любого тестера на проникновение в Интернет: 
		веб-браузер, такой как Chrome или Firefox, и cURLинструмент командной 
		строки.
			
			https://curl.haxx.se/

		- cURL (клиентский URL) — это инструмент командной строки и библиотека, 
		которая в основном поддерживает HTTP наряду со многими другими протоколами. 
		Это делает его хорошим кандидатом для сценариев, а также для автоматизации, 
		что делает его незаменимым для отправки различных типов веб-запросов из 
		командной строки, что необходимо для многих типов тестов на проникновение 
		в Интернет. 

		- Мы можем отправить базовый HTTP-запрос на любой URL-адрес, используя 
		его в качестве аргумента для cURL, следующим образом: 

			@ curl inlanefreight.com
				
				<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
				<html><head>
				<title>301 Moved Permanently</title>
				...etc

		- Мы видим, что cURL не отображает код HTML/JavaScript/CSS, в отличие от 
		веб-браузера, а печатает его в необработанном формате. Однако, как 
		тестировщиков на проникновение, нас в основном интересует контекст 
		запроса и ответа, который обычно становится намного быстрее и удобнее, 
		чем веб-браузер.

		- Мы также можем использовать cURL для загрузки страницы или файла и 
		вывода содержимого в файл с помощью -O флаг. Если мы хотим указать имя 
		выходного файла, мы можем использовать -oфлаг и указать имя. В противном 
		случае мы можем использовать -Oи cURL будет использовать имя удаленного 
		файла следующим образом:
			
			@ curl -O inlanefreight.com/index.html
				
				% Total    % Received % Xferd  Average Speed   Time    Time     Time  Curren
				                                 Dload  Upload   Total   Spent    Left  Speed
				100   327  100   327    0     0   1712      0 --:--:-- --:--:-- --:--:--  1721

			@ ls
				
				index.html

		- Как видим, на этот раз вывод не распечатывался, а сохранялся в 
		index.html. Мы заметили, что cURL по-прежнему выводит некоторый статус 
		при обработке запроса. Мы можем отключить статус с помощью -s флаг 
		следующим образом:
			
			@ curl -s -O inlanefreight.com/index.html
				

		- На этот раз cURL ничего не печатал, так как вывод был сохранен в 
		index.html файл. Наконец, мы можем использовать -hфлаг, чтобы увидеть, 
		какие другие параметры мы можем использовать с cURL: 
			
			@ curl -h

		- Как упоминается в приведенном выше сообщении, мы можем использовать 
		--help all чтобы распечатать более подробное меню справки, или 
		--help category (например -h http), чтобы распечатать подробную справку 
		по конкретному флагу. Если нам когда-нибудь понадобится прочитать более 
		подробную документацию, мы можем использовать man curlдля просмотра 
		полной страницы руководства cURL. 
		



